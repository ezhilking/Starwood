/* Purpose		: //TODO
 * TestCase Name: Adult notification through Email
 * Created By	: Brij
 * Modified By	: 	
 * Modified Date: 
 * Reviewed By	: 
 * Reviewed Date: 
 */
package testscripts.meetings;

import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CHANNELS;
import functions.Environment;
import functions.Reporter;

public class MEETINGS_REG04_AdultNotifyEmail {

	CHANNELS SW = new CHANNELS();

	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CHANNELS";
		Reporter.StartTest();
		Environment.SetBrowserToUse("FF");
		SW.LaunchBrowser(Environment.MEETING);
	}

	@Test(priority=1)	
	public void CorporateWebsiteForAdultNotifyEmail(){
		SW.MeetingsLogin(SW.TestData("SGP_UserName"), SW.TestData("SGP_Password"));
		SW.Click("MeetingsCorporate_CreateWebsite_BT");
		SW.DropDown_SelectByValue("MeetingsCorporate_SelectPID_DD", SW.TestData("SGP_PID"));
		SW.SelectRadioButton("MeetingsCorporate_radioButton_BN");
		SW.EnterValue("MeetingsCorporate_GroupBlockID_EB", SW.TestData("SGP_GroupBlockID"));
		SW.Click("MeetingsCorporate_FindGbid_BT");
		SW.CheckBox("MeetingsCorporate_SelectgroupBlock_CB", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.DropDown_SelectByIndex("MeetingsCorporate_MeetingType_DD", 1);
		SW.DropDown_SelectByValue("MeetingsCorporate_PrimaryLanguage_DD", "en:English");
		SW.CheckBox("MeetingsCorporate_SecondaryLanguage1_BT", "ON");
		SW.CheckBox("MeetingsCorporate_SecondaryLanguage2_BT", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.EnterValue("MeetingsCorporate_EventName_EB",  SW.RandomString(5));
		SW.EnterValue("MeetingsCorporate_EventVenue_EB", SW.RandomString(5));
		SW.EnterValue("MeetingsCorporate_Contact_EB", SW.RandomString(5));	
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.CheckBox("MeetingsCorporate_Attendee_BT", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");

		try{
			int Dropdownsize = SW.DropDown_GetSize("MeetingsCorporate_AttendeeType_DD");
			int Random = SW.RandomNumber(0, Dropdownsize);
			SW.DropDown_SelectByIndex("MeetingsCorporate_AttendeeType_DD",(Random-1));
		}
		catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured in",e);
		}

		SW.Click("MeetingsCorporate_AssignRoomType_BT");
		SW.Click("MeetingsCorporate_NextButton_BT");	
		SW.EnterValue("MeetingsCorporate_PropName_EB","Contactname"+SW.RandomString(5));
		SW.EnterValue("MeetingsCorporate_PropEmail_EB", SW.RandomString(5)+"@yahoo.com");
		SW.EnterValue("MeetingsCorporate_SoldOutMessage_EB","Sold out"+SW.RandomString(6));
		SW.EnterValue("MeetingsCorporate_SoldOutEmail_BT", SW.RandomString(5)+"@yahoo.com");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.Click("MeetingsCorporate_SaveWebsite_BT");	

		try{
			String AttendeeText = SW.GetText("MeetingsCorporate_AttendeeLink_BT");	
			SW.WriteToTestData("URL", AttendeeText);
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured in",e);
		}
	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

	@Test(priority=2,dependsOnMethods="CorporateWebsiteForAdultNotifyEmail")
	public void AdultandSoldoutMail(){
		SW.NavigateTo(SW.TestData("URL"));
		SW.Click("MeetingsBooking_ClickonBook_BT");
		SW.EnterValue("MeetingsBooking_CheckIn_EB", SW.TestData("SGP_CheckIn"));
		SW.EnterValue("MeetingsBooking_CheckOut_EB", SW.TestData("SGP_CheckOut"));
		SW.DropDown_SelectByValue("MeetingsBooking_Room_BT", "4");
		SW.DropDown_SelectByValue("MeetingsBooking_Adult_BT", "3");
		SW.Click("MeetingsBooking_Search_BT");
		String SoldOutMessage = SW.GetText("MeetingsBooking_SoldOutMessage_BT");	
		Environment.loger.log(Level.INFO, "Sold Out Message is displayed :"+ SoldOutMessage);
		SW.Click("MeetingsBooking_SoldOutLink_BT");
		SW.EnterValue("MeetingsBooking_SoldOutEmail_BT", "diksha.sharma@accenture.com");
		SW.Click("MeetingsBooking_SoldOutEmailSubmit_BT");
		SW.Click("MeetingsBooking_SoldOutEmailClose_BT");
		SW.GetScreenshot("SoldOut Message Sent");
		SW.Click("MeetingsBooking_SoldOutLink_BT");
		SW.Click("MeetingsBooking_SoldOutEmailSubmit_BT");
		String WithoutMailMessage = SW.GetText("MeetingsBooking_errorMessageWithoutMail_BT");
		SW.CompareText("MeetingsBooking_ErrorMessageWithoutMail_DT", "Please enter an email address.", WithoutMailMessage);
		SW.Click("MeetingsBooking_SoldOutEmailClose_BT");	
		SW.Click("MeetingsCorporate_EventContact_ST");
	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
	
	@AfterClass
	public void EndTest(){
		Reporter.StopTest();		
	}
}
