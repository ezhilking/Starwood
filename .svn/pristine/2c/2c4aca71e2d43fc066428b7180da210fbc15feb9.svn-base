package testscripts.gcRegression;
/** Purpose		: Validate_Split reservation for 2 guest for 2 rooms where reservation date change_LM brand_German lanaguage
 * TestCase Name: GC_REG80_ValidateSplitReservationFor2GuestFor2Room
 * Created By	: Sindhu SR
 * Modified By	: 
 * Modified Date: 
 * Reviewed By	: 	
 * Reviewed Date: 
 */
import java.util.Calendar;
import java.util.List;

import javax.xml.soap.SOAPMessage;

import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.w3c.dom.NodeList;

import functions.CRM;
import functions.Environment;
import functions.Reporter;
import functions.SoapUtility;
public class GC_REG80_ValidateSplitReservationFor2GuestFor2Room {
	CRM SW = new CRM();	
	String ReservationNumber,ConfirmationID,UserName,Password,LastName,PhoneNum,CancelationNumber, NewReservationNumber, NewConfirmationNumber;
	String TestCaseName= getClass().getName();
	
	String RequestXMLFileCreateReser,ResponseXMLFileCreateReser,RequestXMLFileSplitReser;
	
	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		TestCaseName=TestCaseName.substring(TestCaseName.lastIndexOf(".")+1, TestCaseName.length()).trim();
		UserName=SW.TestData("GCUsername");
		Password=SW.TestData("GCPassword");
		if(Environment.getRunEnvironment().equalsIgnoreCase("QA3")){
			RequestXMLFileCreateReser= "GC_REG80_BookingRequest_QA3_1967.xml";
			RequestXMLFileSplitReser= "GC_REG80_SplitReserRequest_QA3_1967.xml";
		}
	}
	
	@Test(priority=1)
	public void CreateReservation(){
		
		//call to soap server 
		SOAPMessage soapRequest=SoapUtility.getSOAPRequest(RequestXMLFileCreateReser);
		//Modify the SOAP Request as per the requirement 
		SOAPMessage newSoapMessage=SW.ChangeTransactionIDInSoapRequest(soapRequest);
		
		//Get Arrival Date from Request 
		String FutureArrivalDate= SW.DateAddDays(SW.GetTimeStamp("yyyy-MM-dd"), "yyyy-MM-dd", 10, Calendar.DATE);
		String FutureDepartureDate=SW.DateAddDays(SW.GetTimeStamp("yyyy-MM-dd"), "yyyy-MM-dd", 11, Calendar.DATE);
		
		String actualArrivalDateStamp=SoapUtility.getXMLElementText(newSoapMessage, "ConfirmationDTO", "arrivalDate");
		String actualArrivalTimeStamp=actualArrivalDateStamp.substring(10, actualArrivalDateStamp.length());

		//Get DepartureDate from Request
		String actualDepartureDateStamp=SoapUtility.getXMLElementText(newSoapMessage, "ConfirmationDTO", "departureDate");
		String actualDepartureTimeStamp=actualDepartureDateStamp.substring(10, actualDepartureDateStamp.length());
		
		String NewArrivalTimeStamp=FutureArrivalDate+actualArrivalTimeStamp;
		String NewDepartureTimeStamp=FutureDepartureDate+actualDepartureTimeStamp;
		
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ConfirmationDTO", "arrivalDate", NewArrivalTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ConfirmationDTO", "departureDate", NewDepartureTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ConfirmationDTO", "startTime", NewArrivalTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ConfirmationDTO", "endTime", NewDepartureTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ProductDTO", "startTime", NewArrivalTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "ProductDTO", "endTime", NewDepartureTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "RateDTO", "startDate", NewArrivalTimeStamp);
		newSoapMessage=SoapUtility.setXMLElementTextForAll(newSoapMessage, "RateDTO", "endDate", NewArrivalTimeStamp);
		
		//SoapUtility.printSOAPResponse(newSoapMessage);
		SOAPMessage soapResponse=SoapUtility.getSOAPResponse(newSoapMessage, Environment.SOAPEndPointURL);
		boolean result=SoapUtility.validateSOAPResponseForFault(soapResponse);
		// Process the SOAP Response
		if(result){
			ReservationNumber=SoapUtility.getXMLElementText(soapResponse, "BinderDTO", "binderId");
			Environment.loger.log(Level.INFO, "Reservation Created Successfully");
			Environment.loger.log(Level.INFO, "Reservation Confirmation Number= "+ReservationNumber);
			SW.WriteToEmailTestData(TestCaseName, "ReservationNumber", ReservationNumber);
			SW.WriteToEmailTestData(TestCaseName, "EmailSubjectLine", ReservationNumber);
		
			ConfirmationID=SoapUtility.getXMLElementText(soapResponse, "ConfirmationDTO", "confirmationId");
			Environment.loger.log(Level.INFO, "Confirmation ID Is Created Successfully");
			Environment.loger.log(Level.INFO, "Reservation Confirmation ID= "+ConfirmationID);
			SW.WriteToEmailTestData(TestCaseName, "ValiadtionString1", ConfirmationID);
			
		}else{
			System.out.println("Error in SOAP Response see response file for more details");
			Environment.loger.log(Level.ERROR, "Error in SOAP Response see response file for more details");
			SoapUtility.printSOAPResponse(soapResponse);
		}
	}
	
	@Test(priority=2, dependsOnMethods="CreateNewReservation")
	public void SplitReservation(){
		//call to soap server 
				SOAPMessage soapRequest=SoapUtility.getSOAPRequest(RequestXMLFileSplitReser);
				//Modify the SOAP Request as per the requirement 
				SOAPMessage newSoapMessage=SW.ChangeTransactionIDInSoapRequest(soapRequest);
				newSoapMessage=SoapUtility.setXMLElementText(newSoapMessage, "splitResGuestRequest", "binderNumber", ReservationNumber);
				newSoapMessage=SoapUtility.setXMLElementText(newSoapMessage, "confirmationIdArray", "confirmationId", ConfirmationID);
				
				SOAPMessage soapResponse=SoapUtility.getSOAPResponse(newSoapMessage, Environment.SOAPEndPointURL);
				boolean result=SoapUtility.validateSOAPResponseForFault(soapResponse);
				// Process the SOAP Response
				if(result){
					NewReservationNumber=SoapUtility.getXMLElementText(soapResponse, "splitResGuestReturn", "binderNumber");
					Environment.loger.log(Level.INFO, "Splitting Of Reservation Is Done And new Reservation is Created Successfully");
					Environment.loger.log(Level.INFO, "Reservation Confirmation Number= "+NewReservationNumber);
					SW.WriteToEmailTestData(TestCaseName, "ValiadtionString2", NewReservationNumber);
					
					NewConfirmationNumber=SoapUtility.getXMLElementText(soapResponse, "splitResGuestReturn", "confirmationNumber");
					Environment.loger.log(Level.INFO, "New Confirmation Number is Created Successfully");
					Environment.loger.log(Level.INFO, "Reservation Confirmation ID= "+NewConfirmationNumber);
					SW.WriteToEmailTestData(TestCaseName, "ValiadtionString3", NewConfirmationNumber);
					
				}else{
					System.out.println("Error in SOAP Response see response file for more details");
					Environment.loger.log(Level.ERROR, "Error in SOAP Response see response file for more details");
					SoapUtility.printSOAPResponse(soapResponse);
				}
			}
	
	@AfterClass
	public void EndTest(){
		Reporter.StopTest();		
	}
}


