package testscripts.gcRegression;
/** Purpose		: This is to Validate EGN offer creation for Tribute brand in English language
 * TestCase Name: ValidateEGNofferforTributebrandinEnglish
 * Created By	: Sharanya Bannuru
 * Modified By	: Sachin
 * Modified Date: 6/21/2016
 * Reviewed By	:	
 * Reviewed Date:
 */
import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;

public class GC_REG08_ValidateEGNofferforTributebrandinEnglish {

	CRM SW = new CRM();	
	String sMessage,UserName,Password;

	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		SW.LaunchBrowser(Environment.GCURL);
		UserName=SW.TestData("GCUsername");
		Password=SW.TestData("GCPassword");
	}

	@Test(priority=1)
	public void GCCreateEGNoffer(){
		try{
			SW.GCLogin(UserName,Password);
			if(SW.ObjectExists("GCHome_Message_DT")){
				SW.NormalClick("GCHome_Message_Close_IC");
			}
			SW.Click("GCCreateOffer_LK");
			SW.Click("GCCreatePropertyOffer_LK");
			SW.Click("GCCreateEGNOffer_LK");
			SW.EnterValue("GCCreateResConf_PropertyId_EB",SW.TestData("GCPropertyID"));
			SW.EnterValue("GCCreateResConf_InternalOfferName_EB", "AutomatedOfferName");
			SW.EnterValue("GCCreateResConf_PresentationStartDate_EB",  SW.GetTimeStamp("MM/dd/yyyy"));
			SW.EnterValue("GCCreateResConf_presentationEndDate_EB",  SW.GetTimeStamp("MM/dd/yyyy"));
			SW.DropDown_SelectByText("GCCreateResConf_Language_DD","English (United States)");
			SW.Click("GCCreateResConf_Continue_BN");
			SW.WaitTillElementToBeClickable("GCCreateResConf_Eligibility_DD");
			if(SW.ObjectExists("GCCreateResConf_Eligibility_DD")){
				Environment.loger.log(Level.INFO,"EGNSetUp Page naviagation SuccessFull");	
			}else{
				Environment.loger.log(Level.ERROR,"EGNSetUp Page naviagation Failed");
				SW.FailCurrentTest("EGNSetUp Page naviagation Failed");
			}
			SW.Click("GCCreateResConf_Continue_BN");
			SW.WaitForPageload();
			SW.Wait(10);
			SW.WaitTillPresenceOfElementLocated("GC_EGNText_FR");
			SW.Wait(10);
			if(SW.ObjectExists("GC_EGNText_FR")){
				Environment.loger.log(Level.INFO,"Eligibility Criteria Page naviagation SuccessFull");
			}	else{
				Environment.loger.log(Level.ERROR,"Eligibility Criteria Page naviagation Failed");
				SW.FailCurrentTest("Eligibility Criteria Page naviagation Failed");
			}
			SW.SwitchToFrame("GC_EGNText_FR");
			SW.Click("GCCreateResConf_OfferTitleAndLandingPageBody_EB");
			sMessage = SW.RandomString(15);
			SW.EnterValue("GCCreateResConf_OfferTitleAndLandingPageBody_EB",sMessage);
			SW.SwitchToFrame("");
			SW.Click("GCCreateResConf_Continue_BN");
			SW.WaitTillElementToBeClickable("GCCreateResConf_Rank_EB");
			if(SW.ObjectExists("GCCreateResConf_Rank_EB")){
				Environment.loger.log(Level.INFO,"Message SetUP SuccessFull");
			}	else{
				Environment.loger.log(Level.ERROR,"Message SetUP Failed");
				SW.FailCurrentTest("Message SetUP Failed");
			}
			SW.EnterValue("GCCreateResConf_Rank_EB","1");
			SW.Click("GCCreateResConf_RankMove_BT");
			SW.Click("GCCreateResConf_Continue_BN");
			SW.WaitTillElementToBeClickable("GCCreateResConf__Submit_BN");
			if(SW.ObjectExists("GCCreateResConf__Submit_BN")){
				Environment.loger.log(Level.INFO,"Landing Page naviagation SuccessFull");
			}	else{
				Environment.loger.log(Level.ERROR,"Landing Page naviagation Failed");
				SW.FailCurrentTest("Landing Page naviagation Failed");
			}
			SW.Click("GCCreateResConf__Submit_BN");
			SW.WaitTillElementToBeClickable("GCHome_GreenMsg_DT");
			if (SW.ObjectExists("GCHome_GreenMsg_DT")){
				String sSuccessMessage=SW.GetText("GCHome_GreenMsg_DT");
				Environment.loger.log(Level.INFO,sSuccessMessage );
				String sOfferId=sSuccessMessage.substring(sSuccessMessage.indexOf("EGN")+3, sSuccessMessage.indexOf("'s")).trim();
				Environment.loger.log(Level.INFO,"Offer is created successfully");
				SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
				SW.Click("GCOfferCreate_Submit_BN");
				SW.WaitTillElementToBeClickable("GCOffer_ApproveIt_IC");
				if(SW.ObjectExists("GCOffer_ApproveIt_IC")){
					SW.Click("GCOffer_ApproveIt_IC");
					SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
					SW.Click("GCOfferCreate_Submit_BN");
					SW.WaitTillElementToBeClickable("GCOffer_Activate_IC");
					if(SW.ObjectExists("GCOffer_Activate_IC")){
						SW.Click("GCOffer_Activate_IC");
						Environment.loger.log(Level.INFO,"Created OfferId "+sOfferId);
						SW.WaitTillElementToBeClickable("GCNavigation_SignOut_LK");
						if(SW.ObjectExists("GCNavigation_SignOut_LK")){
							SW.Click("GCNavigation_SignOut_LK");
						}
					}else{
						Environment.loger.log(Level.ERROR,"Offer Id Activation Failed");
						SW.FailCurrentTest("Offer Id Activation Failed");
					}
				}else{
					Environment.loger.log(Level.ERROR,"Offer Id Approval Failed");
					SW.FailCurrentTest("Offer Id Approval Failed");
				}
			}else{
				Environment.loger.log(Level.ERROR,"Error Occured after Submit");
				SW.FailCurrentTest("Error Occured after Submit");
			}
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception Occured - ",e);
		}
	}	

	@Test(priority=2,dependsOnMethods={"GCCreateEGNoffer"})
	public void BopRefresh(){
		SW.LaunchBrowser(Environment.BOB);
		SW.BopLogin(UserName,Password);
		SW.Click("BopHome_GCAdmin_Lk");
		SW.WaitTillElementToBeClickable("BopAdmin_Misc_Lk");
		SW.NormalClick("BopAdmin_Misc_Lk");
		SW.WaitTillElementToBeClickable("BopMisc_BeanShell_LK");
		SW.NormalClick("BopMisc_BeanShell_LK");
		SW.EnterValue("BopBeanShell_Query_EB", "com.starwood.gcp.app.offer.OffersCache.refreshCache();");
		if(SW.ObjectExists("BopeBeanShell_Execute_BN")){
			SW.Click("BopeBeanShell_Execute_BN");
			Environment.loger.log(Level.INFO,"Bop Refreshed successfully");
		}else{
			Environment.loger.log(Level.ERROR,"Bop Refresh failed");
			SW.FailCurrentTest("Bop Refresh failed");
		}
	}
	@AfterClass
	public void EndTest(){
		Reporter.StopTest();		
	}
}
