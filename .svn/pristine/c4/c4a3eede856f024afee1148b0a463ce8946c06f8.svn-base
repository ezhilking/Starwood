package testscripts.Discovery;
/** Purpose		: Validate Template Archival
 * TestCase Name: 1. Validate Template Archival
 * Created By	: Sachin
 * Modified By	: 
 * Modified Date: 
 * Reviewed By	:	
 * Reviewed Date:
 */
import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;

public class REG02_ValidateTemplateArchival {
	CRM SW = new CRM();
	String UserName;
	String Password;
	String SurveyID,UnArchivedTemplate;
	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		Environment.SetBrowserToUse("FF");
		SW.LaunchBrowser(Environment.DISCOVERYURL);
		UserName=SW.TestData("DisUsername");
		Password=SW.TestData("DisPassword");

	}
	//Validate_Template_Archived_any Surveys_Active.
	@Test(priority=1)
	public void ActiveSurveyTemplateArchival(){
		SW.DiscoveryLogin(UserName, Password);
		if(!SW.ObjectExists("DiscHomePage_FirstSurvey_LK")){
			Environment.loger.log(Level.ERROR, "No Existing surveys present please create one from create survey");
			SW.FailCurrentTest("No Surveys Presernt");
		}
		SW.Click("DiscHomePage_FirstSurvey_LK");
		if(SW.ObjectExists("DiscCreateSurvey_SurveyOpenConfirmation_LK"))
			SW.Click("DiscCreateSurvey_SurveyOpenConfirmation_LK");
		SurveyID=SW.GetText("DiscCreateSurvey_ExistingSurveyID_ST");
		SurveyID=SurveyID.substring(SurveyID.indexOf("[")+1, SurveyID.indexOf("]"));
		SW.Click("DiscCreateSurvey_TemplaingLink_LK");
		String SelectedTemplate=SW.GetText("DiscSaveSuvey_TemplateSelectionLabel_DT");
		SelectedTemplate=SelectedTemplate.substring(SelectedTemplate.lastIndexOf("the")+3,SelectedTemplate.indexOf("template.")).trim();
		SW.Click("DiscNavigationPanel_ManageTemplate_LK");
		SW.ClickAndProceed("//a[text()='"+SelectedTemplate+"']//ancestor::tr//a[text()='Archive']");//Click on Archive link of the selected template
		SW.HandleAlert(true);
		String WarningMessage=SW.GetText("DiscSaveSuvey_SurveySuccessMessage_DT");
		SW.CompareTextContained("CompareWarningMessage", "cannot be archived as there are active surveys associated with it", WarningMessage);
		SW.CompareTextContained("CompareSuveyID", SurveyID, WarningMessage);
	}
	//Validate_Template_Archived_all Surveys_Archived.
	@Test(priority=2, dependsOnMethods="ActiveSurveyTemplateArchival")
	public void NonActiveSurveyTemplateArchival(){
																																
		SW.Click("DiscNavigationPanel_Archived_LK");
		SW.Click("DiscNavigationPanel_ArchivedTemplate_LK");
		UnArchivedTemplate=SW.GetText("DiscArchivedTemplate_FirstArchivedTemplate_LK");
		SW.ClickAndProceed("DiscArchivedTemplate_FirstTemplateArchived_LK");
		SW.Wait(3);
		SW.HandleAlert(true);
		if(SW.ObjectExists("DiscSaveSuvey_SurveySuccessMessage_DT")){
			Environment.loger.log(Level.INFO, "Template UnArchived Successfully");
			SW.GetScreenshot("CreateSurveyPass");
		}
		
		SW.Click("DiscNavigationPanel_ManageTemplate_LK");
		SW.ClickAndProceed("//a[text()='"+UnArchivedTemplate+"']//ancestor::tr//a[text()='Archive']");//Click on Archive link of the selected template
		SW.HandleAlert(true);
		if(SW.ObjectExists("DiscSaveSuvey_SurveySuccessMessage_DT")){
			SW.CompareTextContained("ConformTemplateArchival", "Successfully archived", SW.GetText("DiscSaveSuvey_SurveySuccessMessage_DT"));
			Environment.loger.log(Level.INFO, "Template Archived Successfully");
			SW.GetScreenshot("CreateSurveyPass");
		}else{
			Environment.loger.log(Level.ERROR, "Template Archival Failed");
			SW.FailCurrentTest("Template Archival Failed");
		}
		SW.Click("DiscNavigationPanel_Archived_LK");
		SW.Click("DiscNavigationPanel_ArchivedTemplate_LK");
		if(SW.ObjectExists("//a[text()='"+UnArchivedTemplate+"']")){
			Environment.loger.log(Level.INFO, "Template is present in the Archived Template page after Archival");
			SW.GetScreenshot("CreateSurveyPass");
		}else{
			Environment.loger.log(Level.ERROR, "Template is present in the Archived Template page after Archival");
			SW.FailCurrentTest("Template is present in the Archived Template page after Archival");
		}
		
	}
	
	@AfterClass
	public void EndTest(){
		SW.Click("Disclogout_logout_BT");
		Reporter.StopTest();		
	}


}
