package testscripts.gcRegression;
/** Purpose		: Validate that the 7 day window warning message for future offers is displayed when there is AHBB MPM secondary3 offer in approved status for the property within next 7 days
 * TestCase Name: Validate that the 7 day window warning message for future offers is displayed when there is AHBB MPM secondary3 offer in approved status for the property within next 7 days
 * Created By	: Sachin
 * Modified By	: 
 * Modified Date: 
 * Reviewed By	:	
 * Reviewed Date:
 */
import java.util.Calendar;

import org.apache.log4j.Level;
import org.openqa.selenium.Keys;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;

public class GC_REG27_Validate7DayWindowWarningMessageFutureOffersAHBBMPM {

	CRM SW = new CRM();	
	String  OfferID,Username,Password;
	String Prop1="1965";
	String Prop2="1299";

	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		SW.LaunchBrowser(Environment.GCURL);
		Username=SW.TestData("GCUsername");
		Password=SW.TestData("GCPassword");
	}
	@Test(priority=1)
	public void CreateMPMAHBBOffer(){

		//ReservationNumber="514574821";
		SW.GCLogin(Username,Password);
		if(SW.ObjectExists("GCHome_Message_DT")){
			SW.NormalClick("GCHome_Message_Close_IC");
		}
		
		SW.Click("GCCreateOffer_LK");
		SW.Click("GCCreatePropertyOffer_LK");
		SW.Click("GCCreateAHBBSBMPOffer_LK");
		SW.EnterValue("GCAHBBMPMOffer_PropIDs_EB",Prop1+","+Prop2);
		SW.EnterValue("GCAHBBMPMOffer_InternalOfferName_EB", "AutomatedAHBBOfferName");
		SW.EnterValue("GCAHBBMPMOffer_PresentationStartDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 7, Calendar.DATE));
		SW.EnterValue("GCAHBBMPMOffer_presentationEndDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 7, Calendar.DATE));
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_Continue_BN");
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.EnterValue("GCAHBBMPMOffer_EmailSetup_Subject_EB", "Automation Email Subject");
		SW.EnterValue("GCAHBBMPMOffer_EmailSetup_PreHeader_EB", "Automation Email Header");
		SW.DropDown_SelectByIndex("GCAHBBMPMOffer_MessageSetupOfferSecHeading_DD", 1);
		SW.Click("GCAHBBMPMOffer_EmailSetup_CreateOffer_BT");
		SW.EnterValue("GCCreateResConf_PropertyId_EB",Prop1);
		SW.SelectRadioButton("GCCreateResConf_offerObjctvType_RB");
		SW.CheckBox("GCCreateResConf_InstayBenefits_CB","ON");
		SW.DropDown_SelectByText("GCCreateResConf_GeoScope_DD","Global");
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_MessageSetupOfferHeading_EB");
		SW.EnterValue("GCAHBBMPMOffer_MessageSetupOfferHeading_EB", "Automatic Offer Header");
		SW.EnterValue("GCAHBBMPMOffer_MessageSetupOfferSubHeading_EB", "Automatic Offer Sub Header");

		SW.SwitchToFrame("GCAHBBMPMOffer_MessageSetupOfferDescription_FR");
		SW.Click("GCAHBBMPMOffer_MessageSetupOfferDescription_EB");
		SW.EnterValue("GCAHBBMPMOffer_MessageSetupOfferDescription_EB", "Automation Description");
		SW.SwitchToFrame("");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_PropertyImageExpand_IC");
		SW.NormalClick("GCAHBBMPMOffer_PropertyImageExpand_IC");
		if(!SW.ObjectExists("GCAHBBMPMOffer_PropertyImageSelect_IC"))
			SW.NormalClick("GCAHBBMPMOffer_PropertyImageExpand_IC");
		SW.NormalClick("GCAHBBMPMOffer_PropertyImageSelect_IC");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_MobilePropertyImageExpand_IC");
		SW.NormalClick("GCAHBBMPMOffer_MobilePropertyImageExpand_IC");
		if(!SW.ObjectExists("GCAHBBMPMOffer_MobilePropertyImageSelect_IC"))
			SW.NormalClick("GCAHBBMPMOffer_MobilePropertyImageExpand_IC");
		SW.NormalClick("GCAHBBMPMOffer_MobilePropertyImageSelect_IC");
		SW.SelectRadioButton("GCAHBBMPMOffer_suppressCallToActionInd_RB");

		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_EmailSetup_CreateOffer_BT");
		SW.Wait(5);
		if(SW.ObjectExists("GCAHBBMPMOffer_EmailSetup_CreateOffer_BT"))
		{
			Environment.loger.log(Level.INFO, "Primary offer created successfully");
		}else{
			Environment.loger.log(Level.ERROR, "Primary offer is not created successfully");
			SW.FailCurrentTest("Primary offer is not created successfully");
		}

		// Create AMB second offer 

		SW.Click("GCAHBBMPMOffer_EmailSetup_CreateOffer_BT");
		SW.WaitTillElementToBeClickable("GCCreateResConf_PropertyId_EB");
		SW.EnterValue("GCCreateResConf_PropertyId_EB",Prop2);
		SW.SelectRadioButton("GCCreateResConf_offerObjctvType_RB");
		SW.CheckBox("GCCreateResConf_InstayBenefits_CB","ON");
		SW.DropDown_SelectByText("GCCreateResConf_GeoScope_DD","Global");
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_MessageSetupOfferHeading_EB");
		SW.EnterValue("GCAHBBMPMOffer_MessageSetupOfferHeading_EB", "Automatic Offer Header 2");
		SW.SwitchToFrame("GCAHBBMPMOffer_MessageSetupOfferDescription_FR");
		SW.Click("GCAHBBMPMOffer_MessageSetupOfferDescription_EB");
		SW.EnterValue("GCAHBBMPMOffer_MessageSetupOfferDescription_EB", "Automation Description2");
		SW.SwitchToFrame("");
		
		SW.NormalClick("GCAHBBMPMOffer_CompaignImageExpand_IC");
		if(!SW.ObjectExists("GCAHBBMPMOffer_CompaigImageSelect_IC"))
			SW.NormalClick("GCAHBBMPMOffer_CompaignImageExpand_IC");
		SW.NormalClick("GCAHBBMPMOffer_CompaigImageSelect_IC");
		//SW.SelectRadioButton("GCAHBBMPMOffer_suppressCallToActionInd_RB");
		SW.EnterValue("GCAHBBMPMOffer_SecondaryPageUrl_EB", "https://");
		
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_Continue_BN");
		SW.Wait(5);
		SW.Click("GCAHBBMPMOffer_Continue_BN");
		SW.Wait(5);
		SW.WaitTillElementToBeClickable("GCAHBBMPMOffer_OfferSubmit_BN");
		
		if(SW.ObjectExists("GCAHBBMPMOffer_OfferSubmit_BN")){
			Environment.loger.log(Level.INFO,"AHBB Offer navigation successfull");
		}else{
			Environment.loger.log(Level.INFO, "AHBB Offer navigation is not successfull");
			SW.FailCurrentTest("AHBB Offer navigation is not successfull");
		}
		SW.Click("GCAHBBMPMOffer_OfferSubmit_BN");
		SW.WaitTillElementToBeClickable("GCHome_GreenMsg_DT");
		if (SW.ObjectExists("GCHome_GreenMsg_DT")){
			String sSuccessMessage=SW.GetText("GCHome_GreenMsg_DT");
			Environment.loger.log(Level.INFO,sSuccessMessage );
			OfferID=sSuccessMessage.substring(sSuccessMessage.indexOf("Offer")+5, sSuccessMessage.indexOf("'s")).trim();
			Environment.loger.log(Level.INFO,"Offer is created successfully");

			SW.EnterValue("GCOffer_SearchCriteria_EB",OfferID);
			SW.Click("GCOfferCreate_Submit_BN");
			SW.WaitTillElementToBeClickable("GCOffer_ApproveIt_IC");
			if(SW.ObjectExists("GCOffer_ApproveIt_IC")){
				SW.Click("GCOffer_ApproveIt_IC");
				SW.ClickAndProceed("GCOffer_Approve_BT");
				SW.HandleAlert(true);
				SW.WaitForPageload();
				SW.WaitTillElementToBeClickable("GCHome_GreenMsg_DT");
				if(SW.ObjectExists("GCHome_GreenMsg_DT")){
					
					String Message=SW.GetText("GCHome_GreenMsg_DT");
					if(SW.CompareTextContained("Approved", Message)){
						Environment.loger.log(Level.INFO,"Offer status changed to Approved successfully");
					}else{
						Environment.loger.log(Level.ERROR,"Offer status is not changed to Apprived");
					}
				}
			}
		}
	}
	@Test(priority=2, dependsOnMethods="CreateMPMAHBBOffer")
	public void validateWarningMessage(){

		SW.Click("GCCreateOffer_LK");
		SW.Click("GCCreatePropertyOffer_LK");
		SW.Click("GCCreateAHBBMPMOffer_LK");
		SW.EnterValue("GCAHBBMPMOffer_PropIDs_EB",Prop1+","+Prop2);
		SW.EnterValue("GCAHBBMPMOffer_InternalOfferName_EB", "AutomatedAHBBOfferName");
		SW.EnterValue("GCAHBBMPMOffer_PresentationStartDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 1, Calendar.DATE));
		SW.EnterValue("GCAHBBMPMOffer_presentationEndDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 1, Calendar.DATE)+Keys.TAB);
		SW.Wait(5);
		SW.WaitTillElementToBeClickable("GCHome_OrangeMsg_DT");
		if(SW.ObjectExists("GCHome_OrangeMsg_DT")){

			String WarningMessage=SW.GetText("GCHome_OrangeMsg_DT");
			SW.CompareTextContained("ValidateOfferIDInWarningMessage",OfferID, WarningMessage);
			Environment.loger.log(Level.INFO,"Offer Offer ID is present in the Warning messages");

		}else{
			Environment.loger.log(Level.ERROR,"Warning message is not displayed");
			SW.FailCurrentTest("Warning message is not displayed");
		}
		/*//TODO Add validation for after modifying dates 
		SW.EnterValue("GCAHBBMPMOffer_PresentationStartDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 0, Calendar.DATE));
		SW.EnterValue("GCAHBBMPMOffer_presentationEndDate_EB",  SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"), "MM/dd/yyyy", 0, Calendar.DATE));

		if(SW.ObjectExists("//*[@id='errorMessagesOrange']")){

			String WarningMessage=SW.GetText("//*[@id='errorMessagesOrange']");
			if(!SW.CompareTextContained(OfferID, WarningMessage)){
				Environment.loger.log(Level.INFO,"Offer Id is not present in the warning message after changing the dates");

			}else{
				Environment.loger.log(Level.ERROR,"Offer ID is still present in the warning message after changing the date range");
				SW.FailCurrentTest("Offer ID is still present in the warning message after changing the date range");
			}

		}*/
	}
	@AfterClass
	public void EndTest(){
		if(SW.ObjectExists("GCNavigation_SignOut_LK")){
			SW.Click("GCNavigation_SignOut_LK");
		}
		Reporter.StopTest();		
	}
}
