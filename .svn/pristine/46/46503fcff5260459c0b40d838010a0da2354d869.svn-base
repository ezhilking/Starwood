/* Purpose		: //TODO
 * TestCase Name: Ceremony text & reception text validation for wedding in booking landing page
 * Created By	: Brij
 * Modified By	: 	
 * Modified Date: 
 * Reviewed By	: 
 * Reviewed Date: 
 */

package testscripts.meetings;

import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CHANNELS;
import functions.Environment;
import functions.Reporter;
import org.apache.commons.lang3.text.WordUtils; 
public class MEETINGS_REG12_WeddingBookingPageCeremonyReception {

	CHANNELS SW = new CHANNELS();

	String ceremonyVenue = SW.RandomString(5);
	String ceremonyStartDate = "2020-12-30";
	String ReceptionVenue = WordUtils.capitalize(SW.RandomString(5)); //
	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CHANNELS";
		Reporter.StartTest();
		Environment.SetBrowserToUse("FF");
		SW.LaunchBrowser(Environment.MEETING);
	}

	@Test(priority=1)	
	public void WeddingWebsiteForValidateCeremonyReception(){
		SW.MeetingsLogin(SW.TestData("SGP_UserName"), SW.TestData("SGP_Password"));
		SW.Click("MeetingsCorporate_CreateWebsite_BT");
		SW.DropDown_SelectByValue("MeetingsCorporate_SelectPID_DD", SW.TestData("SGP_PID"));
		SW.SelectRadioButton("MeetingsCorporate_radioButton_BN");
		SW.EnterValue("MeetingsCorporate_GroupBlockID_EB", SW.TestData("SGP_GroupBlockID"));
		SW.Click("MeetingsCorporate_FindGbid_BT");
		SW.CheckBox("MeetingsCorporate_SelectgroupBlock_CB", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.DropDown_SelectByIndex("MeetingsWedding_MeetingType_DD", 3);
		SW.DropDown_SelectByValue("MeetingsWedding_PrimaryLanguage_DD", "en:English");
		SW.CheckBox("MeetingsWedding_SecondaryLanguage_BT", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.EnterValue("MeetingsWedding_EventName_EB", ceremonyVenue);
		SW.EnterValue("MeetingsWedding_EventVenue_EB", SW.RandomString(5));
		SW.EnterValue("MeetingsWedding_EventDate_EB", ceremonyStartDate);
		System.out.println("ReceptionVenue is =" + ReceptionVenue);
		SW.EnterValue("MeetingsWedding_ReceptionVenue_EB", ReceptionVenue);
		SW.EnterValue("MeetingsWedding_EventEmail_EB", SW.RandomString(5)+"@yahoo.com");
		SW.Click("MeetingsCorporate_NextButton_BT");
		SW.CheckBox("MeetingsWedding_Attendee_BT", "ON");
		SW.Click("MeetingsCorporate_NextButton_BT");
		try{
			int Dropdownsize = SW.DropDown_GetSize("MeetingsCorporate_AttendeeType_DD");
			int Random = SW.RandomNumber(0, Dropdownsize);
			SW.DropDown_SelectByIndex("MeetingsCorporate_AttendeeType_DD",(Random-1));
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured in",e);
		}

		SW.Click("MeetingsWedding_AssignRoomType_BT");
		SW.Click("MeetingsCorporate_NextButton_BT");	
		SW.EnterValue("MeetingsWedding_PropName_EB", SW.RandomString(5));
		SW.EnterValue("MeetingsWedding_PropEmail_EB", SW.RandomString(5)+"@yahoo.com");
		SW.EnterValue("MeetingsWedding_SoldOutMessage_EB", "Sold out"+SW.RandomString(6));
		SW.EnterValue("MeetingsWedding_SoldOutEmail_BT", SW.RandomString(5)+"@yahoo.com");
		SW.ClickAndProceed("MeetingsCorporate_NextButton_BT");
		SW.ClickAndProceed("MeetingsWedding_SaveWebsite_BT");	
		SW.GetScreenshot("Publishing Wedding Website");
	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

	@Test(priority=2,dependsOnMethods="WeddingWebsiteForValidateCeremonyReception")

	public void BookingPageValidateCeremonyReception(){
		SW.Click("MeetingsCorporateCreate_ClickonLink_BT");
		SW.WaitForWindowCount(2);
		SW.SwitchToWindow(2);

		try{
			String[] Ceremony = SW.GetText("MeetingsWedding_BookingLandingCeremony_DD").split("\n");
			System.out.println(Ceremony[0]);
			System.out.println(Ceremony[1]);

			String[] CeremonyValue = Ceremony[1].split(",");
			System.out.println(CeremonyValue[0]);
			System.out.println(CeremonyValue[1]);
			System.out.println(CeremonyValue[2]);
			SW.CompareText("CeremonyBookingPageValidation_DD","Ceremony:"+"\n"+"December 30"+"\n "+"2020"+"\n "+"12:00 AM", Ceremony[0]+"\n"+CeremonyValue[0].trim()+"\n "+CeremonyValue[1].trim()+"\n "+CeremonyValue[2].trim());

			String[] Reception = SW.GetText("MeetingsWedding_BookingLandingReception_DD").split("\n");	
			System.out.println(Reception[0]);
			System.out.println(Reception[1]);
			SW.CompareText("ReceptionBookingPageValidation_DD", "Reception:"+"\n"+ReceptionVenue, Reception[0]+"\n"+Reception[1]);
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured in",e);
		}
	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

	@AfterClass
	public void EndTest(){
		Reporter.StopTest();		
	}
}
