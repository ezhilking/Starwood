package testscripts.sgrRegression;
/* Purpose		: Validate the excel in pre arrival search.
 * TestCase Name: Validate the Export functionality by Selecting the All  different types of filters 
 * Created By	: Ezhilarasan S
 * Modified By	:
 * Modified Date:
 * Reviewed By	:
 * Reviewed Date:
 */
import java.util.Calendar;

import org.apache.log4j.Level;
import org.openqa.selenium.Keys;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;
import functions.Utility;

public class SGR_REG19_ExcelValidationPreArrivalSearch {

	CRM SW = new CRM();
	@BeforeClass
	public void StartTest(){
		Environment.Tower="CRM";
		Reporter.StartTest();
		Environment.SetBrowserToUse("FF");
		SW.LaunchBrowser(Environment.BWURL+"1965");
	}
	
	String ReservationNo;
	@Test(priority=0)
	public void createNewReservation(){
		try{
			SW.NormalClick("BWLogin_SignInUserNameSPG_BN");
			SW.EnterValue("BWLogin_Username_SPGNo_EB", SW.TestData("BWAMBUsername"));
			SW.EnterValue("BWLogin_Password_EB", SW.TestData("BWAMBPassword"));
			SW.NormalClick("BWLogin_SignIn_BN");
			// If Security Question appears give answer otherwise proceed 
			if(SW.ObjectExists("BWSecurityQuestions_VerbelPassword_TB")){

				String SecurityQn=SW.GetText("//form[@id='securityQForm']//div[@class='outerContainer']//p");
				String lastWord = SecurityQn.substring(SecurityQn.lastIndexOf(" ")+1, SecurityQn.indexOf("?"));
				SW.EnterValue("BWSecurityQuestions_VerbelPassword_TB", lastWord.trim());
				SW.Click("BWSecurityQuestions_Submit_BN");
			}
			if(!SW.ObjectExists("BWLogin_CheckInDate_TB")){
				Environment.loger.log(Level.ERROR, "login is not successfull");
				SW.FailCurrentTest("login is not successfull");

			}
			// Enter the Check-in and Check-out time
			SW.EnterValue("BWLogin_CheckInDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",5,Calendar.DATE));
			SW.EnterValue("BWLogin_CheckOutDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",6,Calendar.DATE)+Keys.TAB);
			SW.Click("BWLogin_BookNow_BN");
			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.Click("BWSelectRoom_SelectYourRate_BN");
			SW.NormalClick("BWSelectRoom_Reserve_BN");

			//Select Arrival time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqArrivalTime_DD", 6);
			String SelectedArrivalTime = SW.DropDown_GetSelectedText("BWReviewReservation_ReqArrivalTime_DD");
			Environment.loger.log(Level.INFO, "Selected Arrival Time : "+SelectedArrivalTime);

			//Select Departure time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqDepartureTime_DD", 5);
			String SelectedDepartureTime = SW.DropDown_GetSelectedText("BWReviewReservation_ReqDepartureTime_DD");
			Environment.loger.log(Level.INFO, "Selected Departure Time : "+SelectedDepartureTime);
			SW.NormalClick("BWReviewReservation_CompleteYourReservation_BN");
			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.WaitTillElementToBeClickable("BWReservationConfirmation_ConfirmationNum_DT");
			ReservationNo = SW.GetText("BWReservationConfirmation_ConfirmationNum_DT");
			Environment.loger.log(Level.INFO, "Reservation Confirmation Number is :"+ReservationNo);
			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.Click("BWGeneral_UserName_ST");
			SW.Click("BWGeneral_SignOut_LK");
			Utility.CloseBrowser();
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured: "+e.getMessage());
			SW.FailCurrentTest("Exception occured while creating reservation in branded web");
		}
	}
	
	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-SGR Validation*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
		@Test(priority=1, dependsOnMethods="createNewReservation")
		public void validateAMBGuestInSGR(){
			Environment.SetBrowserToUse("IE");
			SW.LaunchBrowser(Environment.SGRURL);
			SW.SGRLogin(SW.TestData("SGRUsername"), SW.TestData("SGRPassword"), "1965");
			SW.Click("SGRNavigation_PreArrivalSearch_LK");
			SW.EnterValue("SGRPreArrival_ArrivalStartDate_EB", SW.GetTimeStamp("dd-MMM-yyyy"));
			SW.EnterValue("SGRPreArrival_ArrivalEndDate_EB", SW.DateAddDays(SW.GetTimeStamp("dd-MMM-yyyy"), "dd-MMM-yyyy", 4, Calendar.DATE));
			SW.Click("SGRPreArrival_Search_BN");
			
			
			
		}

	@AfterClass
	public void EndTest(){
		SW.Click("SGR_Logout_LK");
		Reporter.StopTest();		
	}
}

