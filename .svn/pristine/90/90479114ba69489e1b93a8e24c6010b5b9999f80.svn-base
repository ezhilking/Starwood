package testscripts.gcRegression;
/** Purpose		: Validate_List_upload_feature_eligibilty_Criteria 
 * TestCase Name: Validate_List_upload_feature_eligibilty_Criteria 
 * Created By	: Sachin	
 * Modified By	: 
 * Modified Date: 
 * Reviewed By	: 
 * Reviewed Date: 
 */

import java.util.List;

import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;

public class GC_REG90_ValidateListUploadFeatureEligibiltyCriteria {

	CRM SW = new CRM();	
	String sMessage, UserName,Password;
	String FilePath=Environment.Documents+"\\CRM\\TestEexcludeGuest.csv";


	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		SW.LaunchBrowser(Environment.GCURL);
		UserName=SW.TestData("GCUsername");
		Password=SW.TestData("GCPassword");
	}
	@Test(priority=1)
	public void GCCreateResConfOfferWithPromo(){
		SW.GCLogin(UserName,Password);
		SW.Wait(10);
		if(SW.ObjectExists("GCHome_Message_DT")){
			SW.NormalClick("GCHome_Message_Close_IC");
		}
		SW.Click("GCCreateOffer_LK");
		SW.Click("GCCreatePropertyOffer_LK");
		SW.Click("GCCreateResConfOffer_LK");
		SW.EnterValue("GCCreateResConf_PropertyId_EB","110");
		SW.EnterValue("GCCreateResConf_InternalOfferName_EB", "AutomatedOfferName");
		SW.EnterValue("GCCreateResConf_PresentationStartDate_EB",  SW.GetTimeStamp("MM/dd/yyyy"));
		SW.EnterValue("GCCreateResConf_presentationEndDate_EB",  SW.GetTimeStamp("MM/dd/yyyy"));
		SW.SelectRadioButton("GCCreateResConf_offerObjctvType_RB");
		SW.CheckBox("GCCreateResConf_InstayBenefits_CB","ON");
		SW.DropDown_SelectByText("GCCreateResConf_GeoScope_DD","Global");
		SW.Click("GCCreateResConf_Continue_BN");
		if(SW.ObjectExists("GCCreateResConf_Eligibility_DD")){
			Environment.loger.log(Level.INFO,"OfferSetUp Page naviagation SuccessFull");	
		}else{
			Environment.loger.log(Level.ERROR,"OfferSetUp Page naviagation Failed");
			Reporter.Write("Validate navigation from Offer Setup page to Elgibility Criteria page", "OfferSetUp Page naviagation SuccessFull", "OfferSetUp Page naviagation Failed", "Fail");
		}
		SW.DropDown_SelectByValue("GCCreateResConf_Eligibility_DD","65");// to select the Guest Email Exclude option
		SW.Wait(10);
		SW.EnterValue("GCCreateResConf_EnterEmailID_EB","abcd@efgh.com");
		SW.Wait(10);
		SW.Click("GCCreateResConf_EligibleAdd_BT");
		//Brows the email file 
		SW.EnterValue("GCCreateResConf_BrowsEmailFIle_EB", FilePath);
		SW.Click("GCCreateResConf_UploadEmailFile_BT");
		List<String> EmailID=SW.DropDown_GetText("GCCreateResConf_UploadedEmails_DD");
		SW.CompareTextContained("Validate Email ID existance", "test15@gtest.com", EmailID.toString());
		SW.Click("GCCreateResConf_EligibleInclude_BT");
		SW.WaitForPageload();
		//Validate the Uploaded email id's
		String AllEmailText=SW.GetText("//table[@class='eligiTable']//tr[6]//tr//td");
		SW.CompareTextContained("Validate Email ID existance", "TEST15@GTEST.COM", AllEmailText);

		SW.Click("GCCreateResConf_Continue_BN");

		SW.Wait(10);
		if(SW.ObjectExists("GCCreateResConf_LandingPageDestinationURL_RB")){
			Environment.loger.log(Level.INFO,"Eligibility Criteria Page naviagation SuccessFull");
		}	else{
			Environment.loger.log(Level.ERROR,"Eligibility Criteria Page naviagation Failed");
			Reporter.Write("Validate navigation from Elgibility Criteria page to Message Setup page", "Elgibility Criteria Page naviagation SuccessFull", "Elgibility Criteria Page naviagation Failed", "Fail");
		}
		SW.WaitTillElementToBeClickable("GCCreateResConf_PropertyImageExpand_IC");
		SW.NormalClick("GCCreateResConf_PropertyImageExpand_IC");
		if(!SW.ObjectExists("GCCreateResConf_PropertyImageSelect_IC"))
			SW.NormalClick("GCCreateResConf_PropertyImageExpand_IC");
		SW.NormalClick("GCCreateResConf_PropertyImageSelect_IC");
		SW.SelectRadioButton("GCCreateResConf_LandingPageDestinationURL_RB");
		SW.SwitchToFrame("GCCreateResConf_OfferTitle_FR");
		SW.Click("GCCreateResConf_OfferTitleAndLandingPageBody_EB");
		sMessage = SW.RandomString(15);
		SW.EnterValue("GCCreateResConf_OfferTitleAndLandingPageBody_EB",sMessage);
		SW.SwitchToFrame("");
		SW.Click("GCCreateResConf_Continue_BN");
		if(SW.ObjectExists("GCCreateResConf_suppressCallToActionInd_RB")){
			Environment.loger.log(Level.INFO,"MessageSetup Page naviagation SuccessFull");
		}	else{
			Environment.loger.log(Level.ERROR,"MessageSetup Page naviagation Failed");
			Reporter.Write("Validate navigation from Message Setup page to Landing page", "Message Setup Page naviagation SuccessFull", "Message Setup Page naviagation Failed", "Fail");
		}
		SW.WaitTillElementToBeClickable("GCCreateResConf_LandingImageExpand_IC");
		SW.NormalClick("GCCreateResConf_LandingImageExpand_IC");
		if(!SW.ObjectExists("GCCreateResConf_LandingImageSelect_IC"))
			SW.NormalClick("GCCreateResConf_LandingImageExpand_IC");
		SW.NormalClick("GCCreateResConf_LandingImageSelect_IC");
		SW.SelectRadioButton("GCCreateResConf_suppressCallToActionInd_RB");
		SW.SwitchToFrame("GCCreateResConf_LandingPageDescription_FR");
		SW.Click("GCCreateResConf_OfferTitleAndLandingPageBody_EB");
		SW.EnterValue("GCCreateResConf_OfferTitleAndLandingPageBody_EB",sMessage);
		SW.SwitchToFrame("");
		SW.Click("GCCreateResConf_Continue_BN");
		if(SW.ObjectExists("GCCreateResConf_Rank_EB")){
			Environment.loger.log(Level.INFO,"Landing Page naviagation SuccessFull");
		}	else{
			Environment.loger.log(Level.ERROR,"Landing Page naviagation Failed");
			Reporter.Write("Validate navigation from Landing page to Ranking page", "Landing Page naviagation SuccessFull", "Landing Page naviagation Failed", "Fail");
		}
		SW.EnterValue("GCCreateResConf_Rank_EB","1");
		SW.Click("GCCreateResConf_RankMove_BT");
		SW.Click("GCCreateResConf_Continue_BN");
		//VALIDATE THE EMAILS IN THE ELIGIBILITY PAGE
		String EmailIDinOverview=SW.GetText("//div[@id='innertwo']//td");
		SW.CompareTextContained("Validate Email ID existance", "TEST15@GTEST.COM", EmailIDinOverview);
		if(SW.ObjectExists("GCCreateResConf__Submit_BN")){
			Environment.loger.log(Level.INFO,"Ranking naviagation SuccessFull");
		}	else{
			Environment.loger.log(Level.ERROR,"Ranking Page naviagation Failed");
			Reporter.Write("Validate navigation from Ranking page to Offer Overview page", "Ranking Page naviagation SuccessFull", "Ranking Page naviagation Failed", "Fail");
		}
		SW.Click("GCCreateResConf__Submit_BN");

		if (SW.ObjectExists("GCHome_GreenMsg_DT")){
			String sSuccessMessage=SW.GetText("GCHome_GreenMsg_DT");
			Environment.loger.log(Level.INFO,sSuccessMessage );
			String sOfferId=sSuccessMessage.substring(sSuccessMessage.indexOf("Offer")+5, sSuccessMessage.indexOf("'s")).trim();
			Environment.loger.log(Level.INFO,"Offer is created successfully");		
			SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
			SW.Click("GCOfferCreate_Submit_BN");
			SW.WaitTillElementToBeClickable("GCOffer_ApproveIt_IC");
			if(SW.ObjectExists("GCOffer_ApproveIt_IC")){
				SW.Click("GCOffer_ApproveIt_IC");
				SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
				SW.Click("GCOfferCreate_Submit_BN");
				SW.WaitTillElementToBeClickable("GCOffer_Generate_IC");
				if(SW.ObjectExists("GCOffer_Generate_IC")){
					SW.Click("GCOffer_Generate_IC");
					SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
					SW.Click("GCOfferCreate_Submit_BN");
					SW.WaitTillElementToBeClickable("GCOffer_Publish_IC");
					if(SW.ObjectExists("GCOffer_Publish_IC")){
						SW.Click("GCOffer_Publish_IC");
						SW.EnterValue("GCOffer_SearchCriteria_EB",sOfferId);
						SW.Click("GCOfferCreate_Submit_BN");
						SW.WaitTillElementToBeClickable("GCOffer_Activate_IC");
						if(SW.ObjectExists("GCOffer_Activate_IC")){
							SW.Click("GCOffer_Activate_IC");
							Environment.loger.log(Level.INFO,"Created OfferId "+sOfferId);
							if(SW.ObjectExists("GCNavigation_SignOut_LK")){
								SW.Click("GCNavigation_SignOut_LK");
							}

						}else{
							Environment.loger.log(Level.ERROR,"Offer Id Activation Failed");
							Reporter.Write("Validate Offer ID Activation", "Offer Id Activation Successfull", "Offer Id Activation Failed", "Fail");
						}
					}else
					{
						Environment.loger.log(Level.ERROR,"Offer Id Publish Failed");
						Reporter.Write("Validate Offer ID Publishing", "Offer Id Publish Successfull", "Offer Id Publish Failed", "Fail");
					}
				}else{
					Environment.loger.log(Level.ERROR,"Offer Id Generation Failed");
					Reporter.Write("Validate Offer ID Generation", "Offer Id Generation Successfull", "Offer Id Generation Failed", "Fail");
				}
			}else{
				Environment.loger.log(Level.ERROR,"Offer Id Approval Failed");
				Reporter.Write("Validate Offer ID Approval", "Offer Id Approval Successfull", "Offer Id Approval Failed", "Fail");
			}
		}else{
			Environment.loger.log(Level.ERROR,"Error Occured after Submit");
			Reporter.Write("Validate Offer ID is Submited", "Offer Id is submitted Successfully", "Error Occured after Submit", "Fail");
		}

	}	

	@AfterClass
	public void EndTest(){

		Reporter.StopTest();		
	}
}
