package testscripts.Discovery;
/** Purpose		: Validate the Advanced Likert Sale question type in the Question Screen
 * TestCase Name: Validate the Advanced Likert Sale question type in the Question Screen
 * Created By	: Sachin
 * Modified By	: 
 * Modified Date: 
 * Reviewed By	:	
 * Reviewed Date:
 */
import org.apache.log4j.Level;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;

public class REG04_ValidateAdvancedLikertSaleQuestionTypeInTheQuestionScreen {
	CRM SW = new CRM();
	String UserName;
	String Password;
	String TempIntro, TempComplete, TempExpire, TempHeader,SurveyID,QuestionName,FollowUpQn;

	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		Environment.SetBrowserToUse("FF");
		SW.LaunchBrowser(Environment.DISCOVERYURL);
		UserName=SW.TestData("DisUsername");
		Password=SW.TestData("DisPassword");

	}
	@Test(priority=1)
	public void EnterGeneralDetails(){
		SW.DiscoveryLogin(UserName, Password);
		SW.Click("DiscManageSurvey_CreateSurvey_BT");
		SW.DiscoveryEnterValue("DiscCreateSurvey_SurveyName_EB", "Survey "+SW.RandomString(5));
		SW.DiscoveryEnterValue("DiscCreateSurvey_SurveyOwner_EB", "Owner "+SW.RandomString(5));
		SW.DropDown_SelectByIndex("DiscCreateSurvey_SurveyLanguage_DD", 5);
		SW.CheckBox("DiscCreateSurvey_SurveyDivisionAll_CB", "ON");
		SW.DropDown_SelectByIndex("DiscCreateSurvey_SurveyChanel_DD", 1);
		SW.CheckBox("DiscCreateSurvey_SurveyBookingChanel_CB", "ON");
		SW.DiscoveryEnterValue("DiscCreateSurvey_SurveyDescription_EB", "Description_ "+SW.RandomString(5));
		SW.Click("DiscCreateSurvey_NextTemplating_BT");
		if(SW.ObjectExists("DiscSelectTemplate_SelectTemplate_LK")){
			Environment.loger.log(Level.INFO, "Template Page Navigation successfull");
		}else{
			Environment.loger.log(Level.ERROR, "Template Page Navigation failed");
			SW.FailCurrentTest("Template Page Navigation failed");
		}
	}
	@Test(priority=2,dependsOnMethods="EnterGeneralDetails")
	public void selectTemplate(){
		//Validate the template selection label before template selection
		String TempSelection=SW.GetText("DiscSaveSuvey_TemplateSelectionLabel_DT");
		SW.CompareText("CompareTemplatelabel ","No template has been selected.", TempSelection);
		SW.Click("DiscSaveSuvey_FirstTemplateSelection_LK");//Click on first template
		SW.Click("DiscSelectTemplate_SelectTemplate_BT");
		//Validate after template selection
		String SelectedTempName=SW.GetText("DiscSaveSuvey_FirstTemplateSelection_LK");
		TempSelection=SW.GetText("DiscSaveSuvey_TemplateSelectionLabel_DT");
		SW.CompareTextContained("CompareTemplateName", SelectedTempName, TempSelection);
		SW.Click("DiscSaveSuvey_SaveSurvey_BT");
		SW.Click("DiscSelectTemplate_Next-Questions_BT");
		if(SW.ObjectExists("DiscSelectTemplate_TemplateSelectedMsg_DT")){
			Environment.loger.log(Level.ERROR, "Template is not selected successfully");
			SW.FailCurrentTest("Template is not selected successfully");
		}else{
			Environment.loger.log(Level.INFO, "Template selected successfully");
		}
	}
	@Test(priority=3,dependsOnMethods="selectTemplate")
	public void selectQuestions(){
		//Add question to the survey
		SW.Click("DiscAddQuestion_AddQuestion_BT");
		SW.WaitTillPresenceOfElementLocated("DiscAddQuestion_AddQuestionText_FR");
		SW.SwitchToFrame("DiscAddQuestion_AddQuestionText_FR");
		SW.Click("DiscSelectTemplate_Entertext_EB");
		QuestionName="Sample Question _"+SW.RandomString(5);
		SW.DiscoveryEnterValue("DiscSelectTemplate_Entertext_EB", QuestionName);
		SW.SwitchToFrame("");

		SW.DropDown_SelectByValue("DiscAddQuestion_SelectQuestionType_DD", "12");
		SW.Click("DiscAddQuestion_AdvanceLikertNextQuestion_BT");
		SW.Click("DiscAddQuestion_AdvanceLikertextSave_BT");
		
		if(SW.ObjectExists("//th[contains(.,'"+QuestionName+"')]")){
			Environment.loger.log(Level.INFO, "Question added to the survey successfully");
			SW.Click("DiscSaveSuvey_SaveSurvey_BT");
		}
		else{
			Environment.loger.log(Level.ERROR, "Question not added to the survey successfully");
			SW.FailCurrentTest("Question not added to the survey successfully");
		}
		
		SW.Click("//th[contains(.,'"+QuestionName+"')]");
		if(!SW.ObjectExists("DiscAddQuestion_BLAddFollowupQn_LK")){
			Environment.loger.log(Level.INFO, "Followup question link is not present for the Advance likert scale question");
		}else{
			Environment.loger.log(Level.ERROR, "Followup question link is present for the Advance likert scale question");
			SW.FailCurrentTest("Followup question link is present for the Advance likert scale question");
		}
	}
	@AfterClass
	public void EndTest(){
		SW.Click("Disclogout_logout_BT");
		Reporter.StopTest();		
	}
}
