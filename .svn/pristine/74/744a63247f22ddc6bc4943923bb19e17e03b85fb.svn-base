package testscripts.sgrRegression;
/* Purpose		: To create a normal reservation in Branded Web Application and validate the Arrival time and Comments 
 * TestCase Name: Validate the guest status and time field in reservation details section for arriving guest
 * Created By	: Sachin G/ Ezhilarasan.S 
 * Modified By	:
 * Modified Date:
 * Reviewed By	: Sachin G/ Ezhilarasan.S 
 * Reviewed Date: 04/07/2016
 */
import java.util.Calendar;

import org.apache.log4j.Level;
import org.openqa.selenium.Keys;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import functions.CRM;
import functions.Environment;
import functions.Reporter;
import functions.Utility;

public class SGR_REG09_CreateNormalReservation_Validate_Comments {

	CRM SW = new CRM();
	@BeforeClass
	public void StartTest(){
		Environment.Tower = "CRM";
		Reporter.StartTest();
		Environment.SetBrowserToUse("GC");
		SW.LaunchBrowser(Environment.BWURL+SW.TestData("SVOPropertyID"));
	}

	String ReservationNo,SecondReservationNo,SelectedArrivalTime;

	@Test(priority=1)
	public void createTwoNormalReservations(){
		try{
			SW.NormalClick("BWLogin_SignInUserNameSPG_BN");
			SW.EnterValue("BWLogin_Username_SPGNo_EB", SW.TestData("BWUsername"));
			SW.EnterValue("BWLogin_Password_EB", SW.TestData("BWPassword"));
			SW.Click("BWLogin_SignIn_BN");
			// If Security Question appears give answer otherwise proceed 
			if(SW.ObjectExists("BWSecurityQuestions_VerbelPassword_TB")){

				String SecurityQn=SW.GetText("//form[@id='securityQForm']//div[@class='outerContainer']//p");
				String lastWord = SecurityQn.substring(SecurityQn.lastIndexOf(" ")+1, SecurityQn.indexOf("?"));
				SW.EnterValue("BWSecurityQuestions_VerbelPassword_TB", lastWord.trim());
				SW.Click("BWSecurityQuestions_Submit_BN");
			}
			if(!SW.ObjectExists("BWLogin_CheckInDate_TB")){

				Environment.loger.log(Level.ERROR, "login is not successfull");
				SW.FailCurrentTest("login is not successfull");

			}
			// Enter the Check-in and Check-out time
			SW.EnterValue("BWLogin_CheckInDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",5,Calendar.DATE));
			SW.EnterValue("BWLogin_CheckOutDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",6,Calendar.DATE)+Keys.TAB);
			SW.Click("BWLogin_BookNow_BN");
			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.Wait(60);
			SW.NormalClick("BWSelectRoom_SelectYourRate_BN");

			SW.NormalClick("BWSelectRoom_Reserve_BN");
			SW.Wait(30);
			//Select Arrival time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqArrivalTime_DD", 1);
			String SelectedArrivalTime = SW.DropDown_GetSelectedText("BWReviewReservation_ReqArrivalTime_DD");
			Environment.loger.log(Level.INFO, "Selected Arrival Time : "+SelectedArrivalTime);

			//Select Departure time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqDepartureTime_DD", 2);
			String SelectedDepartureTime = SW.DropDown_GetSelectedText("BWReviewReservation_ReqDepartureTime_DD");
			Environment.loger.log(Level.INFO, "Selected Departure Time : "+SelectedDepartureTime);
			SW.NormalClick("BWReviewReservation_CompleteYourReservation_BN");
			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.WaitTillElementToBeClickable("BWReservationConfirmation_ConfirmationNum_DT");
			if(!SW.ObjectExists("BWReservationConfirmation_ConfirmationNum_DT")){
				Environment.loger.log(Level.INFO, "1st Reservation is not created");
				SW.FailCurrentTest("1st Reservation is not created");
			}
			ReservationNo = SW.GetText("BWReservationConfirmation_ConfirmationNum_DT");
			Environment.loger.log(Level.INFO, "1st Reservation Confirmation Number is :"+ReservationNo);

			//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
			//Book second reservation
			SW.NormalClick("BWReservationConfirmation_BookAgain_BN");
			SW.EnterValue("BWLogin_CheckInDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",5,Calendar.DATE));
			SW.EnterValue("BWLogin_CheckOutDate_TB", SW.DateAddDays(SW.GetTimeStamp("MM/dd/yyyy"),"MM/dd/yyyy",6,Calendar.DATE)+Keys.TAB);
			SW.Click("BWLogin_BookNow_BN");

			if(SW.ObjectExists("BWGeneral_FeedBackPopUp_BN"))
				SW.Click("BWGeneral_FeedBackPopUp_BN");
			SW.Click("BWSelectRoom_SelectYourRate_BN");
			SW.NormalClick("BWSelectRoom_Reserve_BN");


			//Select Arrival time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqArrivalTime_DD", 1);
			//Select Departure time 
			SW.DropDown_SelectByIndex("BWReviewReservation_ReqDepartureTime_DD", 2);

			SW.NormalClick("BWReviewReservation_CompleteYourReservation_BN");
			SW.WaitTillElementToBeClickable("BWReservationConfirmation_ConfirmationNum_DT");
			if(!SW.ObjectExists("BWReservationConfirmation_ConfirmationNum_DT")){
				Environment.loger.log(Level.INFO, "2nd Reservation is not created ");
				SW.FailCurrentTest("2nd Reservation is not created");
			}
			SecondReservationNo = SW.GetText("BWReservationConfirmation_ConfirmationNum_DT");
			Environment.loger.log(Level.INFO, "2nd Reservation Confirmation Number is :"+SecondReservationNo);
			SW.Click("BWGeneral_UserName_ST");
			SW.Click("BWGeneral_SignOut_LK");
			Utility.CloseBrowser();
		}catch(Exception e){
			Environment.loger.log(Level.ERROR, "Exception occured: "+e.getMessage());
			SW.FailCurrentTest("Exception occured!!");
		}
	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-SGR Validation for Arrival Time *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
	@Test(priority=2, dependsOnMethods="createTwoNormalReservations")
	public void ValidateArrivalTimeInSGR(){
		Environment.SetBrowserToUse("IE");
		SW.LaunchBrowser(Environment.SGRURL);//TODO
		SW.SGRLogin(SW.TestData("SGRUsername"), SW.TestData("SGRPassword"), SW.TestData("SVOPropertyID"));
		SW.Wait(10);
		SW.Click("SGRNavigation_ResSearch_LK");
		SW.EnterValue("SGRResSearch_StarLinkConf_EB", ReservationNo);
		SW.Click("SGRResSearch_Submit_BN");
		if(!SW.ObjectExists("SGRResSearch_Results_WT")){
			Environment.loger.log(Level.ERROR, "Reservation is not reached to SGR ");
			SW.FailCurrentTest("Reservation is not reached to SGR");
		}
		SW.WebTbl_Click("SGRResSearch_Results_WT", 1, 1);
		SW.WaitTillInvisibilityOfElement("SGRSVO_LoadingMask_IC");
		SW.WaitTillElementToBeClickable("SGRSVO_ZoomOut_IM");
		SW.Wait(5);
		SW.NormalClick("SGRSVO_ZoomOut_IM");

		SW.WaitTillElementToBeClickable("SGRGuestProfile_GuestTime_ST");
		String GuestTime = SW.GetText("SGRGuestProfile_GuestTime_ST");
		String StandardizedTimeValue=GuestTime.replace(" ", "").replace(",", "");
		//SelectedArrivalTime validation
		SW.CompareTextContained("ArrivalTime_ST",SelectedArrivalTime.replace(" ", ""), StandardizedTimeValue);
		Environment.loger.log(Level.INFO, "Guest time is verified in the profile");

	}

	//*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-SGR Validation for Comments*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
	@Test(priority=3, dependsOnMethods="ValidateArrivalTimeInSGR")
	public void ValidateCommentsInSGR(){
		SW.SwitchToFrame("SGRGuestProfile_LeadStatus_FR");
		SW.DropDown_SelectByIndex("SGRGuestProfile_LeadStatus_DD", 1);
		SW.DropDown_SelectByIndex("SGRGuestProfile_ContactType_DD", 1);
		String Remark = SW.RandomString(6);
		SW.EnterValue("SGRGuestProfile_LeadStatusRemark_EB", Remark);
		SW.Click("SGRGuestProfile_LeadStatusSave_BN");
		SW.Wait(2);//Explicit thread wait for table load with new comment 
		SW.SwitchToFrame("");
		SW.DropDown_SelectByValue("SGRGuestProfile_GuestStatusTime_DD", SecondReservationNo);//Change the Guest Status and Time dropdown value to another reservation
		SW.WaitForPageload();
		SW.SwitchToFrame("SGRGuestProfile_LeadStatus_FR");
		SW.DropDown_SelectByText("SGRGuestProfile_Comments_DD", "Other Reservations");

		int RowCount = SW.WebTbl_GetRowCount("SGRGuestProfile_SVOMarketingComments_WT");
		boolean IsPass = false;
		for(int row=1;row<=RowCount;row++){
			String Comments = SW.WebTbl_GetText("SGRGuestProfile_SVOMarketingComments_WT", row, 9);
			if(SW.CompareTextContained(Remark, Comments)){
				IsPass = true;
				break;
			}
		}
		if(!IsPass){//If its fails mark this test as fail.
			SW.CompareText("SGRComments", "Comments should match", "Comments Not matching");
		}else{
			Environment.loger.log(Level.INFO, "Guest comments are matched ");
		}
	}

	@AfterClass
	public void EndTest(){
		// Sign out the user from the Application
		SW.SwitchToFrame("");
		SW.Click("SGR_Logout_LK");
		Reporter.StopTest();		
	}

}
